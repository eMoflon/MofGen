/**
 * generated by Xtext 2.20.0
 */
package org.mofgen.mGLang;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Function Call</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.mofgen.mGLang.FunctionCall#getFunc <em>Func</em>}</li>
 *   <li>{@link org.mofgen.mGLang.FunctionCall#getExpr <em>Expr</em>}</li>
 * </ul>
 *
 * @see org.mofgen.mGLang.MGLangPackage#getFunctionCall()
 * @model
 * @generated
 */
public interface FunctionCall extends ArithmeticExpression
{
  /**
   * Returns the value of the '<em><b>Func</b></em>' attribute.
   * The literals are from the enumeration {@link org.mofgen.mGLang.MathFunc}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Func</em>' attribute.
   * @see org.mofgen.mGLang.MathFunc
   * @see #setFunc(MathFunc)
   * @see org.mofgen.mGLang.MGLangPackage#getFunctionCall_Func()
   * @model
   * @generated
   */
  MathFunc getFunc();

  /**
   * Sets the value of the '{@link org.mofgen.mGLang.FunctionCall#getFunc <em>Func</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Func</em>' attribute.
   * @see org.mofgen.mGLang.MathFunc
   * @see #getFunc()
   * @generated
   */
  void setFunc(MathFunc value);

  /**
   * Returns the value of the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expr</em>' containment reference.
   * @see #setExpr(ArithmeticExpression)
   * @see org.mofgen.mGLang.MGLangPackage#getFunctionCall_Expr()
   * @model containment="true"
   * @generated
   */
  ArithmeticExpression getExpr();

  /**
   * Sets the value of the '{@link org.mofgen.mGLang.FunctionCall#getExpr <em>Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expr</em>' containment reference.
   * @see #getExpr()
   * @generated
   */
  void setExpr(ArithmeticExpression value);

} // FunctionCall
