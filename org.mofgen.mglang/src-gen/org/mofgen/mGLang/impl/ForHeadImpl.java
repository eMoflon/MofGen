/**
 * generated by Xtext 2.20.0
 */
package org.mofgen.mGLang.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.mofgen.mGLang.ForHead;
import org.mofgen.mGLang.MGLangPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>For Head</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.mofgen.mGLang.impl.ForHeadImpl#getIteratorVar <em>Iterator Var</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ForHeadImpl extends MinimalEObjectImpl.Container implements ForHead
{
  /**
   * The default value of the '{@link #getIteratorVar() <em>Iterator Var</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIteratorVar()
   * @generated
   * @ordered
   */
  protected static final String ITERATOR_VAR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIteratorVar() <em>Iterator Var</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIteratorVar()
   * @generated
   * @ordered
   */
  protected String iteratorVar = ITERATOR_VAR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ForHeadImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MGLangPackage.Literals.FOR_HEAD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIteratorVar()
  {
    return iteratorVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIteratorVar(String newIteratorVar)
  {
    String oldIteratorVar = iteratorVar;
    iteratorVar = newIteratorVar;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MGLangPackage.FOR_HEAD__ITERATOR_VAR, oldIteratorVar, iteratorVar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MGLangPackage.FOR_HEAD__ITERATOR_VAR:
        return getIteratorVar();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MGLangPackage.FOR_HEAD__ITERATOR_VAR:
        setIteratorVar((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MGLangPackage.FOR_HEAD__ITERATOR_VAR:
        setIteratorVar(ITERATOR_VAR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MGLangPackage.FOR_HEAD__ITERATOR_VAR:
        return ITERATOR_VAR_EDEFAULT == null ? iteratorVar != null : !ITERATOR_VAR_EDEFAULT.equals(iteratorVar);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (iteratorVar: ");
    result.append(iteratorVar);
    result.append(')');
    return result.toString();
  }

} //ForHeadImpl
