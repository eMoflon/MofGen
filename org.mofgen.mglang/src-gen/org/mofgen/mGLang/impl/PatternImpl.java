/**
 * generated by Xtext 2.20.0
 */
package org.mofgen.mGLang.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.mofgen.mGLang.Collection;
import org.mofgen.mGLang.MGLangPackage;
import org.mofgen.mGLang.Node;
import org.mofgen.mGLang.ParamManipulation;
import org.mofgen.mGLang.Parameter;
import org.mofgen.mGLang.Pattern;
import org.mofgen.mGLang.PatternReturn;
import org.mofgen.mGLang.Switch;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Pattern</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.mofgen.mGLang.impl.PatternImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.mofgen.mGLang.impl.PatternImpl#getParameters <em>Parameters</em>}</li>
 *   <li>{@link org.mofgen.mGLang.impl.PatternImpl#getColls <em>Colls</em>}</li>
 *   <li>{@link org.mofgen.mGLang.impl.PatternImpl#getNodes <em>Nodes</em>}</li>
 *   <li>{@link org.mofgen.mGLang.impl.PatternImpl#getParamManipulations <em>Param Manipulations</em>}</li>
 *   <li>{@link org.mofgen.mGLang.impl.PatternImpl#getSwitches <em>Switches</em>}</li>
 *   <li>{@link org.mofgen.mGLang.impl.PatternImpl#getReturn <em>Return</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PatternImpl extends MinimalEObjectImpl.Container implements Pattern
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getParameters() <em>Parameters</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameters()
   * @generated
   * @ordered
   */
  protected EList<Parameter> parameters;

  /**
   * The cached value of the '{@link #getColls() <em>Colls</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColls()
   * @generated
   * @ordered
   */
  protected EList<Collection> colls;

  /**
   * The cached value of the '{@link #getNodes() <em>Nodes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNodes()
   * @generated
   * @ordered
   */
  protected EList<Node> nodes;

  /**
   * The cached value of the '{@link #getParamManipulations() <em>Param Manipulations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParamManipulations()
   * @generated
   * @ordered
   */
  protected EList<ParamManipulation> paramManipulations;

  /**
   * The cached value of the '{@link #getSwitches() <em>Switches</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSwitches()
   * @generated
   * @ordered
   */
  protected EList<Switch> switches;

  /**
   * The cached value of the '{@link #getReturn() <em>Return</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturn()
   * @generated
   * @ordered
   */
  protected PatternReturn return_;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PatternImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MGLangPackage.Literals.PATTERN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MGLangPackage.PATTERN__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Parameter> getParameters()
  {
    if (parameters == null)
    {
      parameters = new EObjectContainmentEList<Parameter>(Parameter.class, this, MGLangPackage.PATTERN__PARAMETERS);
    }
    return parameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Collection> getColls()
  {
    if (colls == null)
    {
      colls = new EObjectContainmentEList<Collection>(Collection.class, this, MGLangPackage.PATTERN__COLLS);
    }
    return colls;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Node> getNodes()
  {
    if (nodes == null)
    {
      nodes = new EObjectContainmentEList<Node>(Node.class, this, MGLangPackage.PATTERN__NODES);
    }
    return nodes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ParamManipulation> getParamManipulations()
  {
    if (paramManipulations == null)
    {
      paramManipulations = new EObjectContainmentEList<ParamManipulation>(ParamManipulation.class, this, MGLangPackage.PATTERN__PARAM_MANIPULATIONS);
    }
    return paramManipulations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Switch> getSwitches()
  {
    if (switches == null)
    {
      switches = new EObjectContainmentEList<Switch>(Switch.class, this, MGLangPackage.PATTERN__SWITCHES);
    }
    return switches;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PatternReturn getReturn()
  {
    return return_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReturn(PatternReturn newReturn, NotificationChain msgs)
  {
    PatternReturn oldReturn = return_;
    return_ = newReturn;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MGLangPackage.PATTERN__RETURN, oldReturn, newReturn);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReturn(PatternReturn newReturn)
  {
    if (newReturn != return_)
    {
      NotificationChain msgs = null;
      if (return_ != null)
        msgs = ((InternalEObject)return_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MGLangPackage.PATTERN__RETURN, null, msgs);
      if (newReturn != null)
        msgs = ((InternalEObject)newReturn).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MGLangPackage.PATTERN__RETURN, null, msgs);
      msgs = basicSetReturn(newReturn, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MGLangPackage.PATTERN__RETURN, newReturn, newReturn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MGLangPackage.PATTERN__PARAMETERS:
        return ((InternalEList<?>)getParameters()).basicRemove(otherEnd, msgs);
      case MGLangPackage.PATTERN__COLLS:
        return ((InternalEList<?>)getColls()).basicRemove(otherEnd, msgs);
      case MGLangPackage.PATTERN__NODES:
        return ((InternalEList<?>)getNodes()).basicRemove(otherEnd, msgs);
      case MGLangPackage.PATTERN__PARAM_MANIPULATIONS:
        return ((InternalEList<?>)getParamManipulations()).basicRemove(otherEnd, msgs);
      case MGLangPackage.PATTERN__SWITCHES:
        return ((InternalEList<?>)getSwitches()).basicRemove(otherEnd, msgs);
      case MGLangPackage.PATTERN__RETURN:
        return basicSetReturn(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MGLangPackage.PATTERN__NAME:
        return getName();
      case MGLangPackage.PATTERN__PARAMETERS:
        return getParameters();
      case MGLangPackage.PATTERN__COLLS:
        return getColls();
      case MGLangPackage.PATTERN__NODES:
        return getNodes();
      case MGLangPackage.PATTERN__PARAM_MANIPULATIONS:
        return getParamManipulations();
      case MGLangPackage.PATTERN__SWITCHES:
        return getSwitches();
      case MGLangPackage.PATTERN__RETURN:
        return getReturn();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MGLangPackage.PATTERN__NAME:
        setName((String)newValue);
        return;
      case MGLangPackage.PATTERN__PARAMETERS:
        getParameters().clear();
        getParameters().addAll((java.util.Collection<? extends Parameter>)newValue);
        return;
      case MGLangPackage.PATTERN__COLLS:
        getColls().clear();
        getColls().addAll((java.util.Collection<? extends Collection>)newValue);
        return;
      case MGLangPackage.PATTERN__NODES:
        getNodes().clear();
        getNodes().addAll((java.util.Collection<? extends Node>)newValue);
        return;
      case MGLangPackage.PATTERN__PARAM_MANIPULATIONS:
        getParamManipulations().clear();
        getParamManipulations().addAll((java.util.Collection<? extends ParamManipulation>)newValue);
        return;
      case MGLangPackage.PATTERN__SWITCHES:
        getSwitches().clear();
        getSwitches().addAll((java.util.Collection<? extends Switch>)newValue);
        return;
      case MGLangPackage.PATTERN__RETURN:
        setReturn((PatternReturn)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MGLangPackage.PATTERN__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MGLangPackage.PATTERN__PARAMETERS:
        getParameters().clear();
        return;
      case MGLangPackage.PATTERN__COLLS:
        getColls().clear();
        return;
      case MGLangPackage.PATTERN__NODES:
        getNodes().clear();
        return;
      case MGLangPackage.PATTERN__PARAM_MANIPULATIONS:
        getParamManipulations().clear();
        return;
      case MGLangPackage.PATTERN__SWITCHES:
        getSwitches().clear();
        return;
      case MGLangPackage.PATTERN__RETURN:
        setReturn((PatternReturn)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MGLangPackage.PATTERN__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MGLangPackage.PATTERN__PARAMETERS:
        return parameters != null && !parameters.isEmpty();
      case MGLangPackage.PATTERN__COLLS:
        return colls != null && !colls.isEmpty();
      case MGLangPackage.PATTERN__NODES:
        return nodes != null && !nodes.isEmpty();
      case MGLangPackage.PATTERN__PARAM_MANIPULATIONS:
        return paramManipulations != null && !paramManipulations.isEmpty();
      case MGLangPackage.PATTERN__SWITCHES:
        return switches != null && !switches.isEmpty();
      case MGLangPackage.PATTERN__RETURN:
        return return_ != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //PatternImpl
